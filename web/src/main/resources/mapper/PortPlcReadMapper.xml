<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.com.kcvs.dao.PortPlcReadMapper">
    <update id="updatePortDataFromPLCBit">
        update  port_plcread set PORT_ID=#{portId},PORT_MANUAL_MODE=#{plcRdBitData.PORT_MANUAL_MODE},
                    PORT_AUTO_MODE=#{plcRdBitData.PORT_AUTO_MODE},
                    PORT_MODE_CHANGE_ENABLE=#{plcRdBitData.PORT_MODE_CHANGE_ENABLE},
                    PORT_IN_MODE=#{plcRdBitData.PORT_IN_MODE},
                    PORT_OUT_MODE=#{plcRdBitData.PORT_OUT_MODE},
                    WORK_ENABLE=#{plcRdBitData.WORK_ENABLE},
                    MGV_MODE=#{plcRdBitData.MGV_MODE},
                    PORT_DISABLE_CONFIRM=#{plcRdBitData.PORT_DISABLE_CONFIRM},
                    PORT_TEST_MODE=#{plcRdBitData.PORT_TEST_MODE},
                    OHT_CV_CST_EXIST=#{plcRdBitData.OHT_CV_CST_EXIST},
                    MODE_CHANGE_ENABLE=#{plcRdBitData.MODE_CHANGE_ENABLE},
                    EQ_IN_MODE=#{plcRdBitData.EQ_IN_MODE},
                    EQ_OUT_MODE=#{plcRdBitData.EQ_OUT_MODE},
                    OHT_PORT_ERROR=#{plcRdBitData.OHT_PORT_ERROR},
                    IF_OHT_TO_VALID=#{plcRdBitData.IF_OHT_TO_VALID},
                    IF_OHT_TRANSFER_REQUEST=#{plcRdBitData.IF_OHT_TRANSFER_REQUEST},
                    IF_OHT_BUSY=#{plcRdBitData.IF_OHT_BUSY},
                    IF_OHT_INPUT_COMPLETE=#{plcRdBitData.IF_OHT_INPUT_COMPLETE},
                    IF_OHT_OUTPUT_COMPLETE=#{plcRdBitData.IF_OHT_OUTPUT_COMPLETE},
                    IF_OHT_UNLOAD_MODE_ON=#{plcRdBitData.IF_OHT_UNLOAD_MODE_ON},
                    IF_OHT_AUTO_ON=#{plcRdBitData.IF_OHT_AUTO_ON},
                    IF_OHT_CST_EXIST=#{plcRdBitData.IF_OHT_CST_EXIST},
                    IF_EQ_LOAD_REQUEST=#{plcRdBitData.IF_EQ_LOAD_REQUEST},
                    IF_EQ_UNLOAD_REQUEST=#{plcRdBitData.IF_EQ_UNLOAD_REQUEST},
                    IF_EQ_READY=#{plcRdBitData.IF_EQ_READY},
                    IF_EQ_INPUT_COMPLETE=#{plcRdBitData.IF_EQ_INPUT_COMPLETE},
                    IF_EQ_OUTPUT_COMPLETE=#{plcRdBitData.IF_EQ_OUTPUT_COMPLETE},
                    BIT_X_VEH_EMG_STOP=#{plcRdBitData.BIT_X_VEH_EMG_STOP},
                    BIT_X_VEH_PORT_POSITION=#{plcRdBitData.BIT_X_VEH_PORT_POSITION},
                    BIT_X_VEH_CST_EXITST=#{plcRdBitData.BIT_X_VEH_CST_EXITST},
                    BIT_X_VEH_CST_EMPTY=#{plcRdBitData.BIT_X_VEH_CST_EMPTY},
                    BIT_X_VEH_SHUTTER_OPEN=#{plcRdBitData.BIT_X_VEH_SHUTTER_OPEN},
                    BIT_X_VEH_SHUTTER_CLOSE=#{plcRdBitData.BIT_X_VEH_SHUTTER_CLOSE},
                    BIT_X_VEH_DOWN_END=#{plcRdBitData.BIT_X_VEH_DOWN_END},
                    BIT_X_VEH_UP_END=#{plcRdBitData.BIT_X_VEH_UP_END},
                    BIT_Y_VEH_PORT_EMG_STOP=#{plcRdBitData.BIT_Y_VEH_PORT_EMG_STOP},
                    BIT_Y_VEH_PORT_AUTO=#{plcRdBitData.BIT_Y_VEH_PORT_AUTO},
                    BIT_Y_VEH_PORT_DOWN_REQUEST=#{plcRdBitData.BIT_Y_VEH_PORT_DOWN_REQUEST},
                    BIT_Y_VEH_PORT_UP_REQUEST=#{plcRdBitData.BIT_Y_VEH_PORT_UP_REQUEST},
                    BIT_Y_VEH_PORT_SHUTTER_OPEN_REQ=#{plcRdBitData.BIT_Y_VEH_PORT_SHUTTER_OPEN_REQ},
                    BIT_Y_VEH_PORT_SHUTTER_CLOSE_REQ=#{plcRdBitData.BIT_Y_VEH_PORT_SHUTTER_CLOSE_REQ},
                    BIT_Y_VEH_PORT_RESET=#{plcRdBitData.BIT_Y_VEH_PORT_RESET},
                    BIT_Y_VEH_PORT_DOWN_SENSING=#{plcRdBitData.BIT_Y_VEH_PORT_DOWN_SENSING},
                    VEHICLE_POSITION=#{plcRdBitData.VEHICLE_POSITION}
                    WHERE PORT_NO=#{portNo}
    </update>
</mapper>